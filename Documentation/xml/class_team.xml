<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="class_team" kind="class" prot="public">
    <compoundname>Team</compoundname>
    <includes refid="team_8h" local="no">team.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_team_1a29401fcb0e1934280c7566675b959c4a" prot="private" static="no" mutable="no">
        <type>string</type>
        <definition>string Team::_name</definition>
        <argsstring></argsstring>
        <name>_name</name>
        <briefdescription>
<para>_name The name of team </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/strel/GitHub/CourseWorkFromHell/CourseWork/team.h" line="121" column="1" bodyfile="/home/strel/GitHub/CourseWorkFromHell/CourseWork/team.h" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_team_1a985a11a7ffecb5c2fc3b39d456801b7d" prot="private" static="no" mutable="no">
        <type>vector&lt; <ref refid="class_player" kindref="compound">Player</ref> &gt;</type>
        <definition>vector&lt;Player&gt; Team::_team</definition>
        <argsstring></argsstring>
        <name>_team</name>
        <briefdescription>
<para>_team Players list </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/strel/GitHub/CourseWorkFromHell/CourseWork/team.h" line="126" column="1" bodyfile="/home/strel/GitHub/CourseWorkFromHell/CourseWork/team.h" bodystart="126" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_team_1aada295895b747960576b69d8c87a54ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Team::Team</definition>
        <argsstring>()</argsstring>
        <name>Team</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/strel/GitHub/CourseWorkFromHell/CourseWork/team.h" line="28" column="1" bodyfile="/home/strel/GitHub/CourseWorkFromHell/CourseWork/team.cpp" bodystart="9" bodyend="12"/>
      </memberdef>
      <memberdef kind="function" id="class_team_1a6209508aa24d5a1266fb95ce5e5e2651" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Team::Team</definition>
        <argsstring>(string)</argsstring>
        <name>Team</name>
        <param>
          <type>string</type>
          <defname>name</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates empty team with the name, specified in parameter </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/strel/GitHub/CourseWorkFromHell/CourseWork/team.h" line="34" column="1" bodyfile="/home/strel/GitHub/CourseWorkFromHell/CourseWork/team.cpp" bodystart="14" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="class_team_1abb6230026200657d6fff9df436835729" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Team::Team</definition>
        <argsstring>(string, vector&lt; Player &gt;)</argsstring>
        <name>Team</name>
        <param>
          <type>string</type>
          <defname>name</defname>
        </param>
        <param>
          <type>vector&lt; <ref refid="class_player" kindref="compound">Player</ref> &gt;</type>
          <defname>team</defname>
        </param>
        <briefdescription>
<para><ref refid="class_team" kindref="compound">Team</ref> Creates team with the name specified in parameter and with players, specified in parameter. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/strel/GitHub/CourseWorkFromHell/CourseWork/team.h" line="40" column="1" bodyfile="/home/strel/GitHub/CourseWorkFromHell/CourseWork/team.cpp" bodystart="20" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="class_team_1ab21736a411213da36d08210e570ecbeb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>string Team::getName</definition>
        <argsstring>()</argsstring>
        <name>getName</name>
        <briefdescription>
<para>getName Returns the name of team </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The name of team </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/strel/GitHub/CourseWorkFromHell/CourseWork/team.h" line="47" column="1" bodyfile="/home/strel/GitHub/CourseWorkFromHell/CourseWork/team.cpp" bodystart="29" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="class_team_1a840a65b79f7d718965831611e72b6ac2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Team::setName</definition>
        <argsstring>(string)</argsstring>
        <name>setName</name>
        <param>
          <type>string</type>
          <defname>name</defname>
        </param>
        <briefdescription>
<para>setName Changes the name of team </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/strel/GitHub/CourseWorkFromHell/CourseWork/team.h" line="53" column="1" bodyfile="/home/strel/GitHub/CourseWorkFromHell/CourseWork/team.cpp" bodystart="34" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="class_team_1a59c401173c3bd78e4ce802e0c56c9066" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Team::addPlayer</definition>
        <argsstring>(Player)</argsstring>
        <name>addPlayer</name>
        <param>
          <type><ref refid="class_player" kindref="compound">Player</ref></type>
          <defname>player</defname>
        </param>
        <briefdescription>
<para>addPlayer Adds player to team </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/strel/GitHub/CourseWorkFromHell/CourseWork/team.h" line="59" column="1" bodyfile="/home/strel/GitHub/CourseWorkFromHell/CourseWork/team.cpp" bodystart="42" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="class_team_1ae7e10897ad329c6884b427d4405b85b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Team::delPlayer</definition>
        <argsstring>(Player)</argsstring>
        <name>delPlayer</name>
        <param>
          <type><ref refid="class_player" kindref="compound">Player</ref></type>
          <defname>player</defname>
        </param>
        <briefdescription>
<para>delPlayer Deletes player from team </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/strel/GitHub/CourseWorkFromHell/CourseWork/team.h" line="64" column="1" bodyfile="/home/strel/GitHub/CourseWorkFromHell/CourseWork/team.cpp" bodystart="48" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="class_team_1a0692cba8304a16a9e7130199d98dc20e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Team::isFull</definition>
        <argsstring>()</argsstring>
        <name>isFull</name>
        <briefdescription>
<para>isFull Determines whether the team is full </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Whether the team is full</para></simplesect>
<ref refid="class_team" kindref="compound">Team</ref> is full, if it has 11 players </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/strel/GitHub/CourseWorkFromHell/CourseWork/team.h" line="73" column="1" bodyfile="/home/strel/GitHub/CourseWorkFromHell/CourseWork/team.cpp" bodystart="58" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="class_team_1a20b76437be05fcbe17b921cdc9972327" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Team::isEmpty</definition>
        <argsstring>()</argsstring>
        <name>isEmpty</name>
        <briefdescription>
<para>isEmpty Determines whether the team is empty </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Whether the team is empty</para></simplesect>
<ref refid="class_team" kindref="compound">Team</ref> is empty, if it has no players </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/strel/GitHub/CourseWorkFromHell/CourseWork/team.h" line="81" column="1" bodyfile="/home/strel/GitHub/CourseWorkFromHell/CourseWork/team.cpp" bodystart="63" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="class_team_1adb9b80fa6c6f6c0eed5f7500523d7860" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Team::to_console</definition>
        <argsstring>()</argsstring>
        <name>to_console</name>
        <briefdescription>
<para>to_console Outputs the information about team to console </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/strel/GitHub/CourseWorkFromHell/CourseWork/team.h" line="97" column="1" bodyfile="/home/strel/GitHub/CourseWorkFromHell/CourseWork/team.cpp" bodystart="73" bodyend="82"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_team_1a61e1d0f6f00634835b02168deb404ddd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Team::validateName</definition>
        <argsstring>(string)</argsstring>
        <name>validateName</name>
        <param>
          <type>string</type>
          <defname>name</defname>
        </param>
        <briefdescription>
<para>validateName Validates name </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Whether the name meets the following conditions</para></simplesect>
First character of name must be captilized and other must be in lower case. Name must contain only letters. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/strel/GitHub/CourseWorkFromHell/CourseWork/team.h" line="91" column="1" bodyfile="/home/strel/GitHub/CourseWorkFromHell/CourseWork/team.cpp" bodystart="68" bodyend="71"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_team_1a9eee662144e38bf78a062e006c8c3ceb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator==</definition>
        <argsstring>(Team, Team)</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="class_team" kindref="compound">Team</ref></type>
          <defname>t1</defname>
        </param>
        <param>
          <type><ref refid="class_team" kindref="compound">Team</ref></type>
          <defname>t2</defname>
        </param>
        <briefdescription>
<para>operator == Compares two <ref refid="class_team" kindref="compound">Team</ref> objects </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Whether two objects are equal</para></simplesect>
Two <ref refid="class_team" kindref="compound">Team</ref> objects are equal if they have the same name, capacity and pric for one ticket </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/strel/GitHub/CourseWorkFromHell/CourseWork/team.h" line="107" column="1" bodyfile="/home/strel/GitHub/CourseWorkFromHell/CourseWork/team.cpp" bodystart="86" bodyend="96"/>
      </memberdef>
      <memberdef kind="friend" id="class_team_1a751cb895290fed5451f5af01114ca269" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend ostream &amp;</type>
        <definition>ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(ostream &amp;os, const Team &amp;team)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="class_team" kindref="compound">Team</ref> &amp;</type>
          <declname>team</declname>
        </param>
        <briefdescription>
<para>operator &lt;&lt; Outputs the information about object to stream </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>os</parametername>
</parameternamelist>
<parameterdescription>
<para>Output stream </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>player</parametername>
</parameternamelist>
<parameterdescription>
<para>Object for outputting </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Output stream </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/strel/GitHub/CourseWorkFromHell/CourseWork/team.h" line="115" column="1" bodyfile="/home/strel/GitHub/CourseWorkFromHell/CourseWork/team.cpp" bodystart="98" bodyend="103"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="class_team" kindref="compound">Team</ref> class Describes the footbal team. </para>    </briefdescription>
    <detaileddescription>
<para>It has 11 players and name of team. This class contains functions for player management </para>    </detaileddescription>
    <location file="/home/strel/GitHub/CourseWorkFromHell/CourseWork/team.h" line="26" column="1" bodyfile="/home/strel/GitHub/CourseWorkFromHell/CourseWork/team.h" bodystart="25" bodyend="127"/>
    <listofallmembers>
      <member refid="class_team_1a29401fcb0e1934280c7566675b959c4a" prot="private" virt="non-virtual"><scope>Team</scope><name>_name</name></member>
      <member refid="class_team_1a985a11a7ffecb5c2fc3b39d456801b7d" prot="private" virt="non-virtual"><scope>Team</scope><name>_team</name></member>
      <member refid="class_team_1a59c401173c3bd78e4ce802e0c56c9066" prot="public" virt="non-virtual"><scope>Team</scope><name>addPlayer</name></member>
      <member refid="class_team_1ae7e10897ad329c6884b427d4405b85b0" prot="public" virt="non-virtual"><scope>Team</scope><name>delPlayer</name></member>
      <member refid="class_team_1ab21736a411213da36d08210e570ecbeb" prot="public" virt="non-virtual"><scope>Team</scope><name>getName</name></member>
      <member refid="class_team_1a20b76437be05fcbe17b921cdc9972327" prot="public" virt="non-virtual"><scope>Team</scope><name>isEmpty</name></member>
      <member refid="class_team_1a0692cba8304a16a9e7130199d98dc20e" prot="public" virt="non-virtual"><scope>Team</scope><name>isFull</name></member>
      <member refid="class_team_1a751cb895290fed5451f5af01114ca269" prot="public" virt="non-virtual"><scope>Team</scope><name>operator&lt;&lt;</name></member>
      <member refid="class_team_1a9eee662144e38bf78a062e006c8c3ceb" prot="public" virt="non-virtual"><scope>Team</scope><name>operator==</name></member>
      <member refid="class_team_1a840a65b79f7d718965831611e72b6ac2" prot="public" virt="non-virtual"><scope>Team</scope><name>setName</name></member>
      <member refid="class_team_1aada295895b747960576b69d8c87a54ba" prot="public" virt="non-virtual"><scope>Team</scope><name>Team</name></member>
      <member refid="class_team_1a6209508aa24d5a1266fb95ce5e5e2651" prot="public" virt="non-virtual"><scope>Team</scope><name>Team</name></member>
      <member refid="class_team_1abb6230026200657d6fff9df436835729" prot="public" virt="non-virtual"><scope>Team</scope><name>Team</name></member>
      <member refid="class_team_1adb9b80fa6c6f6c0eed5f7500523d7860" prot="public" virt="non-virtual"><scope>Team</scope><name>to_console</name></member>
      <member refid="class_team_1a61e1d0f6f00634835b02168deb404ddd" prot="public" virt="non-virtual"><scope>Team</scope><name>validateName</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
