<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="team_8cpp" kind="file">
    <compoundname>team.cpp</compoundname>
    <includes refid="team_8h" local="yes">team.h</includes>
    <incdepgraph>
      <node id="942">
        <label>iomanip</label>
      </node>
      <node id="940">
        <label>string</label>
      </node>
      <node id="936">
        <label>QRegExp</label>
      </node>
      <node id="934">
        <label>team.cpp</label>
        <link refid="team.cpp"/>
        <childnode refid="935" relation="include">
        </childnode>
      </node>
      <node id="939">
        <label>vector</label>
      </node>
      <node id="943">
        <label>functions.h</label>
        <link refid="functions_8h"/>
        <childnode refid="940" relation="include">
        </childnode>
        <childnode refid="939" relation="include">
        </childnode>
      </node>
      <node id="935">
        <label>team.h</label>
        <link refid="team_8h"/>
        <childnode refid="936" relation="include">
        </childnode>
        <childnode refid="937" relation="include">
        </childnode>
        <childnode refid="938" relation="include">
        </childnode>
        <childnode refid="939" relation="include">
        </childnode>
        <childnode refid="940" relation="include">
        </childnode>
        <childnode refid="941" relation="include">
        </childnode>
      </node>
      <node id="937">
        <label>QString</label>
      </node>
      <node id="938">
        <label>iostream</label>
      </node>
      <node id="941">
        <label>player.h</label>
        <link refid="player_8h"/>
        <childnode refid="938" relation="include">
        </childnode>
        <childnode refid="942" relation="include">
        </childnode>
        <childnode refid="940" relation="include">
        </childnode>
        <childnode refid="936" relation="include">
        </childnode>
        <childnode refid="937" relation="include">
        </childnode>
        <childnode refid="943" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="team_8cpp_1a214772cc5be0f2c424a55af1d5cc8887" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(Team t1, Team t2)</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="class_team" kindref="compound">Team</ref></type>
          <declname>t1</declname>
        </param>
        <param>
          <type><ref refid="class_team" kindref="compound">Team</ref></type>
          <declname>t2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Whether two objects are equal</para></simplesect>
Two <ref refid="class_team" kindref="compound">Team</ref> objects are equal if they have the same name, capacity and pric for one ticket </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/strel/GitHub/CourseWorkFromHell/CourseWork/team.cpp" line="86" column="1" bodyfile="/home/strel/GitHub/CourseWorkFromHell/CourseWork/team.cpp" bodystart="86" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="team_8cpp_1a751cb895290fed5451f5af01114ca269" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ostream &amp;</type>
        <definition>ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(ostream &amp;os, const Team &amp;team)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="class_team" kindref="compound">Team</ref> &amp;</type>
          <declname>team</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>os</parametername>
</parameternamelist>
<parameterdescription>
<para>Output stream </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>player</parametername>
</parameternamelist>
<parameterdescription>
<para>Object for outputting </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Output stream </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/strel/GitHub/CourseWorkFromHell/CourseWork/team.cpp" line="98" column="1" bodyfile="/home/strel/GitHub/CourseWorkFromHell/CourseWork/team.cpp" bodystart="98" bodyend="103"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="team_8h" kindref="compound">team.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>===<sp/>CODE<sp/>ERRORS<sp/>===</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>It<sp/>works!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>===================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>===<sp/>Constructors<sp/>===</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9" refid="class_team_1aada295895b747960576b69d8c87a54ba" refkind="member"><highlight class="normal"><ref refid="class_team_1aada295895b747960576b69d8c87a54ba" kindref="member">Team::Team</ref>()</highlight></codeline>
<codeline lineno="10"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>_team<sp/>=<sp/>vector&lt;Player&gt;();</highlight></codeline>
<codeline lineno="12"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="class_team_1a6209508aa24d5a1266fb95ce5e5e2651" refkind="member"><highlight class="normal"><ref refid="class_team_1aada295895b747960576b69d8c87a54ba" kindref="member">Team::Team</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>name)</highlight></codeline>
<codeline lineno="15"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>_name<sp/>=<sp/>name;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>_team<sp/>=<sp/>vector&lt;Player&gt;();</highlight></codeline>
<codeline lineno="18"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="class_team_1abb6230026200657d6fff9df436835729" refkind="member"><highlight class="normal"><ref refid="class_team_1aada295895b747960576b69d8c87a54ba" kindref="member">Team::Team</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>name,<sp/>vector&lt;Player&gt;<sp/>team)</highlight></codeline>
<codeline lineno="21"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>_name<sp/>=<sp/>name;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>_team<sp/>=<sp/>team;</highlight></codeline>
<codeline lineno="24"><highlight class="normal">}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>=====================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>===<sp/>Getters<sp/>And<sp/>Setters<sp/>===</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="class_team_1ab21736a411213da36d08210e570ecbeb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="class_team_1ab21736a411213da36d08210e570ecbeb" kindref="member">Team::getName</ref>()</highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_name;</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="class_team_1a840a65b79f7d718965831611e72b6ac2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_team_1a840a65b79f7d718965831611e72b6ac2" kindref="member">Team::setName</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>name)</highlight></codeline>
<codeline lineno="35"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>_name<sp/>=<sp/>name;</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/>===========================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/>===<sp/>Methods<sp/>===</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="class_team_1a59c401173c3bd78e4ce802e0c56c9066" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_team_1a59c401173c3bd78e4ce802e0c56c9066" kindref="member">Team::addPlayer</ref>(<ref refid="class_player" kindref="compound">Player</ref><sp/>player)</highlight></codeline>
<codeline lineno="43"><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_team_1a0692cba8304a16a9e7130199d98dc20e" kindref="member">isFull</ref>())</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_team.push_back(player);</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="class_team_1ae7e10897ad329c6884b427d4405b85b0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_team_1ae7e10897ad329c6884b427d4405b85b0" kindref="member">Team::delPlayer</ref>(<ref refid="class_player" kindref="compound">Player</ref><sp/>player)</highlight></codeline>
<codeline lineno="49"><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_team_1a20b76437be05fcbe17b921cdc9972327" kindref="member">isEmpty</ref>())</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>_team.size();<sp/>i++)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_team[i]<sp/>==<sp/>player)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_team.erase(_team.begin()<sp/>+<sp/>i);</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="class_team_1a0692cba8304a16a9e7130199d98dc20e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_team_1a0692cba8304a16a9e7130199d98dc20e" kindref="member">Team::isFull</ref>()</highlight></codeline>
<codeline lineno="59"><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_team.size()<sp/>==<sp/><ref refid="team_8h_1a21736e4554bd6c316b5f7822d7678fa3" kindref="member">PLAYER_CNT</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="class_team_1a20b76437be05fcbe17b921cdc9972327" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_team_1a20b76437be05fcbe17b921cdc9972327" kindref="member">Team::isEmpty</ref>()</highlight></codeline>
<codeline lineno="64"><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_team.empty();</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="class_team_1a61e1d0f6f00634835b02168deb404ddd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_team_1a61e1d0f6f00634835b02168deb404ddd" kindref="member">Team::validateName</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>name)</highlight></codeline>
<codeline lineno="69"><highlight class="normal">{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QRegExp(</highlight><highlight class="stringliteral">&quot;^[A-Z][a-z]+$&quot;</highlight><highlight class="normal">).exactMatch(QString::fromStdString(name));</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="class_team_1adb9b80fa6c6f6c0eed5f7500523d7860" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_team_1adb9b80fa6c6f6c0eed5f7500523d7860" kindref="member">Team::to_console</ref>()</highlight></codeline>
<codeline lineno="74"><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;===<sp/>Team<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>_name<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Output<sp/>===&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(vector&lt;Player&gt;::iterator<sp/>iter<sp/>=<sp/>_team.begin();<sp/>iter<sp/>!=<sp/>_team.end();<sp/>++iter)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_player" kindref="compound">Player</ref><sp/>p<sp/>=<sp/>*iter;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>p<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="82"><highlight class="normal">}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">//<sp/>====================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="team_8cpp_1a214772cc5be0f2c424a55af1d5cc8887" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="team_8cpp_1a214772cc5be0f2c424a55af1d5cc8887" kindref="member">operator== </ref>(<ref refid="class_team" kindref="compound">Team</ref><sp/>t1,<sp/><ref refid="class_team" kindref="compound">Team</ref><sp/>t2)</highlight></codeline>
<codeline lineno="87"><highlight class="normal">{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>((&amp;t1<sp/>!=<sp/>0)<sp/>&amp;&amp;<sp/>(&amp;t2<sp/>!=<sp/>0))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((t1._name<sp/>==<sp/>t2._name)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(t1._team<sp/>==<sp/>t2._team))</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="team_8cpp_1a751cb895290fed5451f5af01114ca269" refkind="member"><highlight class="normal">ostream&amp;<sp/><ref refid="team_8cpp_1a751cb895290fed5451f5af01114ca269" kindref="member">operator&lt;&lt;</ref>(ostream&amp;<sp/>os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_team" kindref="compound">Team</ref>&amp;<sp/>team)</highlight></codeline>
<codeline lineno="99"><highlight class="normal">{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>team._name;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os;</highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/strel/GitHub/CourseWorkFromHell/CourseWork/team.cpp"/>
  </compounddef>
</doxygen>
